const API_DOMAIN = "http://143.198.83.161/"

export const get = async (path) => {
    try {
        const response = await fetch(API_DOMAIN + path);
        if (!response.ok) {
            // throw c√≥ t√°c d·ª•ng n√©m l·ªói ra cho catch, v√† d·ª´ng th·ª±c thi trong try
            throw new Error(`L·ªói: ${response.status}`);
        }
        const result = await response.json();
        return result;
    } catch (error) {
        alert(`L·ªói khi g·ªçi API: ${error.message}`);
    }

}

export const post = async (values, path) => {
    try {
        const response = await fetch(API_DOMAIN + path, {
            method: 'POST',
            headers: { //X√°c ƒë·ªãnh ki·ªÉu d·ªØ li·ªáu g·ª≠i v√† mong mu·ªën nh·∫≠n
                'Content-type': 'application/json', // c√°i ki·ªÉu data g·ª≠i cho server s·∫Ω l√† d·∫°ng json
                Accept: 'application/json' //cho server bi·∫øt c√°i data m√¨nh mong mu·ªën m√† server tr·∫£ v·ªÅ c√≥ ƒë·ªãnh d·∫°ng json
            },
            body: JSON.stringify(values) //n∆°i ch·ª©a data ƒë·ªÉ g·ª≠i l√™n server. Tr∆∞·ªõc khi g·ª≠i ph·∫£i chuy·ªÉn n√≥ qua d·∫°ng json
        });
        if (!response.ok) {
            // throw c√≥ t√°c d·ª•ng n√©m l·ªói ra cho catch, v√† d·ª´ng th·ª±c thi trong try
            throw new Error(`L·ªói: ${response.status}`);
        }
        const result = await response.json(); // nh·∫≠n response v√† chuy·ªÉn n√≥ l·∫°i qua d·∫°ng js ƒë·ªÉ d√πng
        return result;
    }
    catch (error) {
        alert(`L·ªói khi g·ªçi API: ${error.message}`); // üêû Hi·ªÉn th·ªã l·ªói
    }
}
export const del = async (path) => {
    try {
        const response = await fetch(API_DOMAIN + path, {
            method: 'DELETE',
            headers: { //X√°c ƒë·ªãnh ki·ªÉu d·ªØ li·ªáu g·ª≠i v√† mong mu·ªën nh·∫≠n
                'Content-type': 'application/json', // c√°i ki·ªÉu data g·ª≠i cho server s·∫Ω l√† d·∫°ng json
                Accept: 'application/json' //cho server bi·∫øt c√°i data m√¨nh mong mu·ªën m√† server tr·∫£ v·ªÅ c√≥ ƒë·ªãnh d·∫°ng json
            },
        });
        if (!response.ok) {
            // throw c√≥ t√°c d·ª•ng n√©m l·ªói ra cho catch, v√† d·ª´ng th·ª±c thi trong try
            throw new Error(`L·ªói: ${response.status}`);
        }
        const result = await response.json(); // nh·∫≠n response v√† chuy·ªÉn n√≥ l·∫°i qua d·∫°ng js ƒë·ªÉ d√πng
        return result;
    }
    catch (error) {
        alert(`L·ªói khi g·ªçi API: ${error.message}`); // üêû Hi·ªÉn th·ªã l·ªói
    }
}
export const patch = async (value, path) => {
    try {
        const response = await fetch(API_DOMAIN + path, {
            method: 'PATCH',
            headers: { //X√°c ƒë·ªãnh ki·ªÉu d·ªØ li·ªáu g·ª≠i v√† mong mu·ªën nh·∫≠n
                'Content-type': 'application/json', // c√°i ki·ªÉu data g·ª≠i cho server s·∫Ω l√† d·∫°ng json
                Accept: 'application/json' //cho server bi·∫øt c√°i data m√¨nh mong mu·ªën m√† server tr·∫£ v·ªÅ c√≥ ƒë·ªãnh d·∫°ng json
            },
            body: JSON.stringify(value)
        });
        if (!response.ok) {
            // throw c√≥ t√°c d·ª•ng n√©m l·ªói ra cho catch, v√† d·ª´ng th·ª±c thi trong try
            throw new Error(`L·ªói: ${response.status}`);
        }
        const result = await response.json(); // nh·∫≠n response v√† chuy·ªÉn n√≥ l·∫°i qua d·∫°ng js ƒë·ªÉ d√πng
        return result;
    }
    catch (error) {
        alert(`L·ªói khi g·ªçi API: ${error.message}`); // üêû Hi·ªÉn th·ªã l·ªói
    }
}